# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 14.0.2 (2021-11-15)
# user:         sam
# date:         Wed Nov 24 15:25:46 America/Denver 2021
# host:         RoaringFork
# directory:    C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\WriteReclamationHDB
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\WriteReclamationHDB\Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Model_Name.TSTool"
# Commands: 
# # Test writing a 1hour time series to ReclamationHDB database:
# #   - development database
# #   - old WRITE_TO_HDB procedure
# #   - model HOUR table
# #   - use model name (not MRI) - corresponds to MRI 167
# #   - SDI 100376 (site common name AAA_DELETE)
# #   - 1hour data - note that HDB uses end_date_time for end of interval but write routines key off of start_date_time
# #   - Write twice with different numbers to make sure old results are not just sitting
# #     in the database.  Write non-missing values because HDB convention is to
# #     NOT write missing values (not sure how re-write is handled if missing involved).
# #   - For two writes, use TSID read once, and ReadReclamationHDB() once to exercise read.
# #   - TO EXAMINE tests, look at first 3 time series
# #@testSuite ReclamationHDB
# StartLog(LogFile="Results/Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Model_Name.TSTool.log")
# RemoveFile(InputFile="Results/Test_ReclamationHDB_Dev_Hour_AAADELETE_Model_Name_out.dv",IfNotFound=Ignore)
# SetOutputPeriod(OutputStart="2010-03-10 00",OutputEnd="2010-03-15 12")
# SetInputPeriod(InputStart="2010-03-10 00",InputEnd="2010-03-15 12")
# #------------------------- start the first pass -------------------------------------
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Hour",Description="AAA_DELETE",Units="cfs",PatternValues="6,11,13,14,76")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ModelName="CBT AOP RiverWare",ModelRunName="CBT AOP Test",ModelRunDate="2012-07-01 00:00",ValidationFlag="A",TimeZone="MST",WriteProcedure="OLD_WRITE_TO_HDB")
# # Now read the same time series from the database using the period that was written...
# ReadTimeSeries(TSID="diversion:100376-167.HDB.flow.Hour.AAA_DELETE~hdbtest",Alias="FirstRead",IfNotFound=Warn)
# # Compare the time series read as a time series with a time series created from SQL query output:
# # - allow one difference due to daylight saving gap
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from M_HOUR where site_datatype_id = 100376 and model_run_id = 167 and end_date_time >= to_date('${InputStart}','YYYY-MM-DD HH24') and end_date_time <= to_date('${InputEnd}','YYYY-MM-DD HH24') order by start_date_time",TableID="m_hour1")
# TableToTimeSeries(TableID="m_hour1",DateTimeColumn="end_date_time",LocationID="100376",ValueColumn="value",Interval=Hour,Units="cfs",Alias="FirstReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="FirstRead",AllowedDiff="1",IfDifferent=Warn)
# CompareTimeSeries(TSID1="FirstRead",TSID2="FirstReadFromTable",IfDifferent=Warn)
# # Also check for missing because there should be none over time zone change:
# # - comment out because daylight saving gap is expected
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstRead",CheckCriteria="Missing")
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstReadFromTable",CheckCriteria="Missing")
# #------------------------- end the first pass -------------------------------------
# #
# #------------------------- start the second pass -------------------------------------
# # Start second pass (previous values x 10)...
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Hour",Description="AAA_DELETE",Units="cfs",PatternValues="600,200,220,230,850")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",TSList=LastMatchingTSID,TSID="AAA_DELETE",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ModelName="CBT AOP RiverWare",ModelRunName="CBT AOP Test",ModelRunDate="2012-07-01 00:00",ValidationFlag="A",TimeZone="MST",WriteProcedure="OLD_WRITE_TO_HDB")
# # Now read the same time series from the database using the period that was written...
# ReadReclamationHDB(DataStore="hdbtest",Interval="Hour",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ModelName="CBT AOP RiverWare",ModelRunName="CBT AOP Test",ModelRunDate="2012-07-01 00:00",Alias="SecondRead")
# # Compare the time series read as a time series with a time series created from SQL query output:
# # - allow one difference due to daylight saving gap
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from M_HOUR where site_datatype_id = 100376 and model_run_id = 167 and end_date_time >= to_date('${InputStart}','YYYY-MM-DD HH24') and end_date_time <= to_date('${InputEnd}','YYYY-MM-DD HH24') order by start_date_time",TableID="m_hour2")
# TableToTimeSeries(TableID="m_hour2",DateTimeColumn="end_date_time",LocationID="100376",ValueColumn="value",Interval=Hour,Units="cfs",Alias="SecondReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="SecondRead",AllowedDiff="1",IfDifferent=Warn)
# CompareTimeSeries(TSID1="SecondRead",TSID2="SecondReadFromTable",IfDifferent=Warn)
# # Also check for missing because there should be none over time zone change:
# # - comment out because daylight saving gap is expected
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondRead",CheckCriteria="Missing")
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondReadFromTable",CheckCriteria="Missing")
# #------------------------- end the second pass -------------------------------------
# # Uncomment the following command to regenerate the expected results file.
# WriteDateValue(TSList=LastMatchingTSID,TSID="FirstRead",OutputFile="ExpectedResults/Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Model_Name_out.dv")
# # Generate new output for what was read from the database...
# WriteDateValue(TSList=LastMatchingTSID,TSID="FirstRead",OutputFile="Results/Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Model_Name_out.dv")
# # Do regression comparison...
# CompareFiles(InputFile1="ExpectedResults\Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Model_Name_out.dv",InputFile2="Results/Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Model_Name_out.dv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on localhost\CDSS
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20210322 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20210322
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 1
TSID        = "diversion:100376-167.HDB.flow.Hour.AAA_DELETE"
Alias       = "FirstRead"
Description = "100376-167"
DataType    = "flow"
Units       = "cfs"
MissingVal  = NaN
Start       = 2010-03-10 00
End         = 2010-03-15 12
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=diversion:100376-167.HDB.flow.Hour.AAA_DELETE Alias=FirstRead):
#
#   Created new time series with interval determined from TSID "diversion:100376-167.HDB.flow.Hour.AAA_DELETE"
#
#EndHeader
Date Time "FirstRead, cfs"
2010-03-10 00 6.0000
2010-03-10 01 11.0000
2010-03-10 02 13.0000
2010-03-10 03 14.0000
2010-03-10 04 76.0000
2010-03-10 05 6.0000
2010-03-10 06 11.0000
2010-03-10 07 13.0000
2010-03-10 08 14.0000
2010-03-10 09 76.0000
2010-03-10 10 6.0000
2010-03-10 11 11.0000
2010-03-10 12 13.0000
2010-03-10 13 14.0000
2010-03-10 14 76.0000
2010-03-10 15 6.0000
2010-03-10 16 11.0000
2010-03-10 17 13.0000
2010-03-10 18 14.0000
2010-03-10 19 76.0000
2010-03-10 20 6.0000
2010-03-10 21 11.0000
2010-03-10 22 13.0000
2010-03-10 23 14.0000
2010-03-11 00 76.0000
2010-03-11 01 6.0000
2010-03-11 02 11.0000
2010-03-11 03 13.0000
2010-03-11 04 14.0000
2010-03-11 05 76.0000
2010-03-11 06 6.0000
2010-03-11 07 11.0000
2010-03-11 08 13.0000
2010-03-11 09 14.0000
2010-03-11 10 76.0000
2010-03-11 11 6.0000
2010-03-11 12 11.0000
2010-03-11 13 13.0000
2010-03-11 14 14.0000
2010-03-11 15 76.0000
2010-03-11 16 6.0000
2010-03-11 17 11.0000
2010-03-11 18 13.0000
2010-03-11 19 14.0000
2010-03-11 20 76.0000
2010-03-11 21 6.0000
2010-03-11 22 11.0000
2010-03-11 23 13.0000
2010-03-12 00 14.0000
2010-03-12 01 76.0000
2010-03-12 02 6.0000
2010-03-12 03 11.0000
2010-03-12 04 13.0000
2010-03-12 05 14.0000
2010-03-12 06 76.0000
2010-03-12 07 6.0000
2010-03-12 08 11.0000
2010-03-12 09 13.0000
2010-03-12 10 14.0000
2010-03-12 11 76.0000
2010-03-12 12 6.0000
2010-03-12 13 11.0000
2010-03-12 14 13.0000
2010-03-12 15 14.0000
2010-03-12 16 76.0000
2010-03-12 17 6.0000
2010-03-12 18 11.0000
2010-03-12 19 13.0000
2010-03-12 20 14.0000
2010-03-12 21 76.0000
2010-03-12 22 6.0000
2010-03-12 23 11.0000
2010-03-13 00 13.0000
2010-03-13 01 14.0000
2010-03-13 02 76.0000
2010-03-13 03 6.0000
2010-03-13 04 11.0000
2010-03-13 05 13.0000
2010-03-13 06 14.0000
2010-03-13 07 76.0000
2010-03-13 08 6.0000
2010-03-13 09 11.0000
2010-03-13 10 13.0000
2010-03-13 11 14.0000
2010-03-13 12 76.0000
2010-03-13 13 6.0000
2010-03-13 14 11.0000
2010-03-13 15 13.0000
2010-03-13 16 14.0000
2010-03-13 17 76.0000
2010-03-13 18 6.0000
2010-03-13 19 11.0000
2010-03-13 20 13.0000
2010-03-13 21 14.0000
2010-03-13 22 76.0000
2010-03-13 23 6.0000
2010-03-14 00 11.0000
2010-03-14 01 13.0000
2010-03-14 02 NaN
2010-03-14 03 76.0000
2010-03-14 04 6.0000
2010-03-14 05 11.0000
2010-03-14 06 13.0000
2010-03-14 07 14.0000
2010-03-14 08 76.0000
2010-03-14 09 6.0000
2010-03-14 10 11.0000
2010-03-14 11 13.0000
2010-03-14 12 14.0000
2010-03-14 13 76.0000
2010-03-14 14 6.0000
2010-03-14 15 11.0000
2010-03-14 16 13.0000
2010-03-14 17 14.0000
2010-03-14 18 76.0000
2010-03-14 19 6.0000
2010-03-14 20 11.0000
2010-03-14 21 13.0000
2010-03-14 22 14.0000
2010-03-14 23 76.0000
2010-03-15 00 6.0000
2010-03-15 01 11.0000
2010-03-15 02 13.0000
2010-03-15 03 14.0000
2010-03-15 04 76.0000
2010-03-15 05 6.0000
2010-03-15 06 11.0000
2010-03-15 07 13.0000
2010-03-15 08 14.0000
2010-03-15 09 76.0000
2010-03-15 10 6.0000
2010-03-15 11 11.0000
2010-03-15 12 13.0000
