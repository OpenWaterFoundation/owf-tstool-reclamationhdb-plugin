# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 11.10.00 (2016-04-12)
# user:         sam
# date:         Thu Apr 28 23:16:55 America/Denver 2016
# host:         colorado
# directory:    C:\owf-gitrepos\cdss-app-tstool-test\test\regression\commands\general\WriteReclamationHDB
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\owf-gitrepos\cdss-app-tstool-test\test\regression\commands\general\WriteReclamationHDB\Test_WriteReclamationHDB_Dev_Month_AAADELETE_Model_Name.TSTool"
# Commands: 
# # Test writing a month time series to ReclamationHDB database:
# #   - development database
# #   - model table
# #   - SDI 100376 (site common name AAA_DELETE)
# #   - model name (MRI not specified) - corresponds to MRI 167
# #   - month data - note that HDB uses start_date_time for month (end is day one of next month)
# #   - Write twice with different numbers to make sure old results are not just sitting
# #     in the database.  Write non-missing values because HDB convention is to
# #     NOT write missing values (not sure how re-write is handled if missing involved).
# #   - For two writes, use TSID read once, and ReadReclamationHDB() once to exercise read.
# StartLog(LogFile="Results/Test_WriteReclamationHDB_Dev_Month_AAADELETE_Model_Name.TSTool.log")
# RemoveFile(InputFile="Results/Test_ReclamationHDB_Dev_Month_AAADELETE_Model_Name_out.dv",IfNotFound=Ignore)
# #
# #------------------------- start the first pass -------------------------------------
# SetInputPeriod(InputStart="2010-01",InputEnd="2015-02")
# SetOutputPeriod(OutputStart="2010-01",OutputEnd="2015-02")
# SetProperty(PropertyName="InputEnd2",PropertyType=DateTime,PropertyValue="2015-03")
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Month",Description="AAA_DELETE",Units="cfs",PatternValues="6,11,13,14,76")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ModelRunID=167,ValidationFlag="A",TimeZone="MST")
# # Now read the same time series from the database using the period that was written...
# ReadTimeSeries(TSID="diversion:100376-167.HDB.flow.Month.AAA_DELETE~hdbtest",Alias="FirstRead",IfNotFound=Warn)
# # Compare the time series read as a time series with a time series created from SQL query output.
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from M_MONTH where site_datatype_id = 100376 and model_run_id = 167 and end_date_time >= to_date('${InputStart}','YYYY-MM') and end_date_time <= to_date('${InputEnd2}','YYYY-MM') order by start_date_time",TableID="r_month1")
# TableToTimeSeries(TableID="r_month1",DateTimeColumn="start_date_time",LocationID="100376",ValueColumn="value",Interval=Month,Units="cfs",Alias="FirstReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="FirstRead",WarnIfDifferent=True)
# CompareTimeSeries(TSID1="FirstRead",TSID2="FirstReadFromTable",WarnIfDifferent=True)
# # Also check for missing because there should be none over time zone change
# CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstRead",CheckCriteria="Missing")
# CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstReadFromTable",CheckCriteria="Missing")
# #
# #------------------------- start the second pass -------------------------------------
# # Start second pass (previous values x 10)...
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Month",Description="AAA_DELETE",Units="cfs",PatternValues="600,200,220,230,850")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",TSList=LastMatchingTSID,TSID="AAA_DELETE",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ModelRunID=167,ValidationFlag="A",TimeZone="MST")
# # Now read the same time series from the database using the period that was written...
# ReadReclamationHDB(DataStore="hdbtest",Interval="Month",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ModelRunID=167,Alias="SecondRead")
# # Compare the time series read as a time series with a time series created from SQL query output.
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from M_MONTH where site_datatype_id = 100376 and model_run_id = 167 and start_date_time >= to_date('${InputStart}','YYYY-MM') and start_date_time <= to_date('${InputEnd2}','YYYY-MM') order by start_date_time",TableID="r_month2")
# TableToTimeSeries(TableID="r_month2",DateTimeColumn="start_date_time",LocationID="100376",ValueColumn="value",Interval=Month,Units="cfs",Alias="SecondReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="SecondRead",WarnIfDifferent=True)
# CompareTimeSeries(TSID1="SecondRead",TSID2="SecondReadFromTable",WarnIfDifferent=True)
# # Also check for missing because there should be none over time zone change
# CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondRead",CheckCriteria="Missing")
# CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondReadFromTable",CheckCriteria="Missing")
# #------------------------- end the second pass -------------------------------------
# #
# # Uncomment the following command to regenerate the expected results file.
# WriteDateValue(TSList=LastMatchingTSID,TSID="SecondRead",OutputFile="ExpectedResults/Test_WriteReclamationHDB_Dev_Month_AAADELETE_Model_Name_out.dv")
# # Generate new output for what was read from the database...
# WriteDateValue(TSList=LastMatchingTSID,TSID="SecondRead",OutputFile="Results/Test_WriteReclamationHDB_Dev_Month_AAADELETE_Model_Name_out.dv")
# # Do regression comparison...
# CompareFiles(InputFile1="ExpectedResults\Test_WriteReclamationHDB_Dev_Month_AAADELETE_Model_Name_out.dv",InputFile2="Results/Test_WriteReclamationHDB_Dev_Month_AAADELETE_Model_Name_out.dv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20160407 on localhost\CDSS
# HydroBase.db_version:  design version: 20141201  last data change: 20160407
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20160407 on localhost\CDSS
# HydroBase.db_version:  design version: 20141201  last data change: 20160407
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 1
TSID        = "diversion:100376-167.HDB.flow.Month.AAA_DELETE.CBT AOP RiverWare-CBT AOP Test--2012-07-01 00:00"
Alias       = "SecondRead"
Description = "100376-167"
DataType    = "flow"
Units       = "cfs"
MissingVal  = NaN
Start       = 2010-01
End         = 2015-02
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=diversion:100376-167.HDB.flow.Month.AAA_DELETE.CBT AOP RiverWare-CBT AOP Test--2012-07-01 00:00 Alias=SecondRead):
#
#   Created new time series with interval determined from TSID "diversion:100376-167.HDB.flow.Month.AAA_DELETE.CBT AOP RiverWare-CBT AOP Test--2012-07-01 00:00"
#
#EndHeader
Date "SecondRead, cfs"
2010-01 600.0000
2010-02 200.0000
2010-03 220.0000
2010-04 230.0000
2010-05 850.0000
2010-06 600.0000
2010-07 200.0000
2010-08 220.0000
2010-09 230.0000
2010-10 850.0000
2010-11 600.0000
2010-12 200.0000
2011-01 220.0000
2011-02 230.0000
2011-03 850.0000
2011-04 600.0000
2011-05 200.0000
2011-06 220.0000
2011-07 230.0000
2011-08 850.0000
2011-09 600.0000
2011-10 200.0000
2011-11 220.0000
2011-12 230.0000
2012-01 850.0000
2012-02 600.0000
2012-03 200.0000
2012-04 220.0000
2012-05 230.0000
2012-06 850.0000
2012-07 600.0000
2012-08 200.0000
2012-09 220.0000
2012-10 230.0000
2012-11 850.0000
2012-12 600.0000
2013-01 200.0000
2013-02 220.0000
2013-03 230.0000
2013-04 850.0000
2013-05 600.0000
2013-06 200.0000
2013-07 220.0000
2013-08 230.0000
2013-09 850.0000
2013-10 600.0000
2013-11 200.0000
2013-12 220.0000
2014-01 230.0000
2014-02 850.0000
2014-03 600.0000
2014-04 200.0000
2014-05 220.0000
2014-06 230.0000
2014-07 850.0000
2014-08 600.0000
2014-09 200.0000
2014-10 220.0000
2014-11 230.0000
2014-12 850.0000
2015-01 600.0000
2015-02 200.0000
