# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 14.0.2 (2021-11-15)
# user:         sam
# date:         Wed Nov 24 15:38:08 America/Denver 2021
# host:         RoaringFork
# directory:    C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\WriteReclamationHDB
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\WriteReclamationHDB\Test_WriteReclamationHDB_WriteData_Dev_Year_AAADELETE_Ensemble.TSTool"
# Commands: 
# # Test writing a Year ensemble of model time series to ReclamationHDB database:
# # - development database
# # - new WRITE_DATA procedure
# # - model table since ensemble
# # - fabricated ensemble data
# # - Year interval
# # - SDI 100376 AAB_DELETE (average flow)
# # - pick a short period
# # - Write twice with different numbers to make sure old results are not just sitting
# #   in the database.  Write non-missing values because HDB convention is to
# #   NOT write missing values (not sure how re-write is handled if missing involved).
# # - Use ReadReclamationHDB() and WriteRlamationHDB() because ensembles don't work with TSIDs
# # - TO EXAMINE tests, look at first 3 time series around the leap year change, similar for last 3 time series
# #@testSuite ReclamationHDB
# StartLog(LogFile="Results/Test_WriteReclamationHDB_WriteData_Dev_Year_AAADELETE_Ensemble.TSTool.log")
# RemoveFile(InputFile="Results/Test_ReclamationHDB_WriteData_Dev_Year_AAADELETE_Ensemble.dv",IfNotFound=Ignore)
# #
# #------------------------- start the first pass -------------------------------------
# SetInputPeriod(InputStart="2010",InputEnd="2014")
# SetOutputPeriod(OutputStart="2010",OutputEnd="2014")
# SetProperty(PropertyName="InputEnd2",PropertyType=DateTime,PropertyValue="2015")
# NewPatternTimeSeries(Alias="AAA_DELETE_TS1",NewTSID="AAA_DELETE.HDB.flow.Year[2010]",Description="AAA_DELETE",Units="cfs",PatternValues="600.5,1100.5,1300.5,1400.5,7600.5,3400.5,1500.5")
# NewPatternTimeSeries(Alias="AAA_DELETE_TS2",NewTSID="AAA_DELETE.HDB.flow.Year[2011]",Description="AAA_DELETE",Units="cfs",PatternValues="500.5,1000.5,1200.5,1300.5,7500.5,3300.5,1400.5")
# NewEnsemble(TSList=AllMatchingTSID,TSID="AAA_DELETE_TS1",NewEnsembleID="AAA_DELETE",NewEnsembleName="AAA_DELETE")
# InsertTimeSeriesIntoEnsemble(TSList=AllMatchingTSID,TSID="AAA_DELETE_TS2",EnsembleID2="AAA_DELETE")
# WriteReclamationHDB(DataStore="hdbtest",TSList=EnsembleID,EnsembleID="AAA_DELETE",SiteDataTypeID=100376,NewEnsembleName="AAA_DELETE Year Date",EnsembleTrace="%z",EnsembleModelName="NWS CBRFC Forecast",NewEnsembleModelRunDate="2013-10-02 10:11",Agency="USBR",ValidationFlag="P",TimeZone="MST",WriteProcedure="WRITE_DATA",EnsembleIDProperty="HDBEnsembleIDFromWrite")
# # Now read the same time series from the database using the period that was written...
# ReadReclamationHDB(DataStore="hdbtest",Interval="Year",SiteDataTypeID=100376,EnsembleName="AAA_DELETE Year Date",OutputEnsembleID="FirstRead",Alias="AAA_DELETE-Year-%z")
# # Compare the time series read as a time series with a time series created from SQL query output.
# # - The site_datatype_id is a double in HDB rather than an int so have to format it as an integer
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from M_YEAR, HDB_MODEL, REF_MODEL_RUN, REF_ENSEMBLE_TRACE, REF_ENSEMBLE where m_year.model_run_id = ref_model_run.model_run_id and ref_model_run.model_id = hdb_model.model_id and ref_model_run.model_run_id = ref_ensemble_trace.model_run_id and ref_ensemble_trace.ensemble_id = ref_ensemble.ensemble_id and m_year.site_datatype_id = 100376 and ref_ensemble.ensemble_id = ${HDBEnsembleIDFromWrite} and start_date_time >= to_date('${InputStart}-01-01','YYYY-MM-DD') and start_date_time <= to_date('${InputEnd}-01-01','YYYY-MM-DD') order by start_date_time",TableID="r_year1")
# FormatTableString(TableID="r_year1",InputColumns="site_datatype_id",Format="%.0f",OutputColumn="site_datatype_id_int",InsertBeforeColumn="start_date_time")
# TableToTimeSeries(TableID="r_year1",DateTimeColumn="start_date_time",LocationColumn="site_datatype_id_int",SequenceIDColumn="hydrologic_indicator",ValueColumn="value",Interval=Year,Units="cfs",Alias="%L-%z-TableFirstRead")
# NewEnsemble(TSList=AllMatchingTSID,TSID="*TableFirstRead",NewEnsembleID="FirstReadFromTable",NewEnsembleName="FirstReadFromTable")
# CompareTimeSeries(EnsembleID1="AAA_DELETE",EnsembleID2="FirstRead",IfDifferent=Warn)
# CompareTimeSeries(EnsembleID1="AAA_DELETE",EnsembleID2="FirstReadFromTable",IfDifferent=Warn)
# # Also check for missing because there should be none over time zone change
# CheckTimeSeries(TSList=EnsembleID,EnsembleID="FirstRead",CheckCriteria="Missing")
# CheckTimeSeries(TSList=EnsembleID,EnsembleID="FirstReadFromTable",CheckCriteria="Missing")
# #
# #------------------------- start the second pass -------------------------------------
# # Start second pass (previous values x 10)...
# NewPatternTimeSeries(Alias="AAA_DELETE_TS3a",NewTSID="AAA_DELETE.HDB.flow.Year[2010]",Description="AAA_DELETE",Units="cfs",PatternValues="5100.5,10100.5,12100.5,13100.5,75100.5,33100.5,14100.5")
# NewPatternTimeSeries(Alias="AAA_DELETE_TS3b",NewTSID="AAA_DELETE.HDB.flow.Year[2011]",Description="AAA_DELETE",Units="cfs",PatternValues="5000.5,10000.5,12000.5,13000.5,75000.5,33000.5,14000.5")
# NewEnsemble(TSList=AllMatchingTSID,TSID="AAA_DELETE_TS3*",NewEnsembleID="AAA_DELETE2",NewEnsembleName="AAA_DELETE2")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",TSList=EnsembleID,EnsembleID="AAA_DELETE2",SiteDataTypeID=100376,NewEnsembleName="AAA_DELETE Year Date",EnsembleTrace="%z",EnsembleModelName="NWS CBRFC Forecast",NewEnsembleModelRunDate="2013-10-02 10:11",Agency="USBR",ValidationFlag="P",TimeZone="MST",WriteProcedure="WRITE_DATA")
# # Now read the same time series from the database using the period that was written...
# ReadReclamationHDB(DataStore="hdbtest",Interval="Year",SiteDataTypeID=100376,EnsembleName="AAA_DELETE Year Date",OutputEnsembleID="SecondRead",Alias="AAA_DELETE2-Year-%z")
# # Compare the time series read as a time series with a time series created from SQL query output.
# # - The site_datatype_id is a double in HDB rather than an int so have to format it as an integer
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from M_YEAR, HDB_MODEL, REF_MODEL_RUN, REF_ENSEMBLE_TRACE, REF_ENSEMBLE where m_year.model_run_id = ref_model_run.model_run_id and ref_model_run.model_id = hdb_model.model_id and ref_model_run.model_run_id = ref_ensemble_trace.model_run_id and ref_ensemble_trace.ensemble_id = ref_ensemble.ensemble_id and m_year.site_datatype_id = 100376 and ref_ensemble.ensemble_id = ${HDBEnsembleIDFromWrite} and start_date_time >= to_date('${InputStart}-01-01','YYYY-MM-DD') and start_date_time <= to_date('${InputEnd}-01-01','YYYY-MM-DD') order by start_date_time",TableID="r_year2")
# FormatTableString(TableID="r_year2",InputColumns="site_datatype_id",Format="%.0f",OutputColumn="site_datatype_id_int",InsertBeforeColumn="start_date_time")
# TableToTimeSeries(TableID="r_year2",DateTimeColumn="start_date_time",LocationColumn="site_datatype_id_int",SequenceIDColumn="hydrologic_indicator",ValueColumn="value",Interval=Year,Units="cfs",Alias="%L-%z-TableSecondRead")
# NewEnsemble(TSList=AllMatchingTSID,TSID="*TableSecondRead",NewEnsembleID="SecondReadFromTable",NewEnsembleName="SecondReadFromTable")
# CompareTimeSeries(EnsembleID1="AAA_DELETE2",EnsembleID2="SecondRead",IfDifferent=Warn)
# CompareTimeSeries(EnsembleID1="AAA_DELETE2",EnsembleID2="SecondReadFromTable",IfDifferent=Warn)
# # Also check for missing because there should be none over time zone change
# CheckTimeSeries(TSList=EnsembleID,EnsembleID="SecondRead",CheckCriteria="Missing")
# CheckTimeSeries(TSList=EnsembleID,EnsembleID="SecondReadFromTable",CheckCriteria="Missing")
# #------------------------- end the second pass -------------------------------------
# #
# # Uncomment the following command to regenerate the expected results file.
# WriteDateValue(TSList=EnsembleID,EnsembleID="FirstRead",OutputFile="ExpectedResults/Test_WriteReclamationHDB_WriteData_Dev_Year_AAADELETE_Ensemble_out.dv")
# # Generate new output for what was read from the database...
# WriteDateValue(TSList=EnsembleID,EnsembleID="FirstRead",OutputFile="Results/Test_WriteReclamationHDB_WriteData_Dev_Year_AAADELETE_Ensemble_out.dv")
# # Do regression comparison...
# CompareFiles(InputFile1="ExpectedResults\Test_WriteReclamationHDB_WriteData_Dev_Year_AAADELETE_Ensemble_out.dv",InputFile2="Results/Test_WriteReclamationHDB_WriteData_Dev_Year_AAADELETE_Ensemble_out.dv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on localhost\CDSS
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20210322 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20210322
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 2
TSID        = "diversion:100376-66906.HDB.flow.Year.AAA_DELETE.NWS CBRFC Forecast-AAA_DELETE Year Date2010-2010-2013-10-02 10:11[2010]" "diversion:100376-66907.HDB.flow.Year.AAA_DELETE.NWS CBRFC Forecast-AAA_DELETE Year Date2011-2011-2013-10-02 10:11[2011]"
Alias       = "AAA_DELETE-Year-2010" "AAA_DELETE-Year-2011"
SequenceID  = "2010" "2011"
Description = "100376-66906" "100376-66907"
DataType    = "flow" "flow"
Units       = "cfs" "cfs"
MissingVal  = NaN NaN
Start       = 2010
End         = 2014
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=diversion:100376-66906.HDB.flow.Year.AAA_DELETE.NWS CBRFC Forecast-AAA_DELETE Year Date2010-2010-2013-10-02 10:11[2010] Alias=AAA_DELETE-Year-2010):
#
#   Created new time series with interval determined from TSID "diversion:100376-66906.HDB.flow.Year.AAA_DELETE.NWS CBRFC Forecast-AAA_DELETE Year Date2010-2010-2013-10-02 10:11"
#
# Creation history for time series 2 (TSID=diversion:100376-66907.HDB.flow.Year.AAA_DELETE.NWS CBRFC Forecast-AAA_DELETE Year Date2011-2011-2013-10-02 10:11[2011] Alias=AAA_DELETE-Year-2011):
#
#   Created new time series with interval determined from TSID "diversion:100376-66907.HDB.flow.Year.AAA_DELETE.NWS CBRFC Forecast-AAA_DELETE Year Date2011-2011-2013-10-02 10:11"
#
#EndHeader
Date "AAA_DELETE-Year-2010, cfs" "AAA_DELETE-Year-2011, cfs"
2010 600.5000 500.5000
2011 1100.5000 1000.5000
2012 1300.5000 1200.5000
2013 1400.5000 1300.5000
2014 7600.5000 7500.5000
