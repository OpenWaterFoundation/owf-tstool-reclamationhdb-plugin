# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 14.0.2 (2021-11-15)
# user:         sam
# date:         Tue Nov 23 00:11:22 America/Denver 2021
# host:         RoaringFork
# directory:    C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\WriteReclamationHDB
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\WriteReclamationHDB\Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Real.TSTool"
# Commands: 
# # TODO SAM 2016-05-01 This test fails apparently due to bug in Oracle JDBC driver related to time zone change
# # Test writing a 1hour REAL time series to ReclamationHDB database:
# #   - This is a copy of the 1Hour test but using more general Hour interval
# #   - development database
# #   - old WRITE_TO_HDB procedure
# #   - real HOUR table
# #   - SDI 100376 (AAA_DELETE site common name)
# #   - hour data - note that HDB uses end_date_time for end of interval but write routines key off of start_date_time
# #   - Write twice with different numbers to make sure old results are not just sitting
# #     in the database.  Write non-missing values because HDB convention is to
# #     NOT write missing values (not sure how re-write is handled if missing involved).
# #   - For two writes, use TSID read once, and ReadReclamationHDB() once to exercise read.
# #   - Set the period to cross the time change, which occurs at 2010-03-14 02
# #   - TO EXAMINE tests, look at first 3 time series
# #@testSuite ReclamationHDB
# StartLog(LogFile="Results/Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Real.TSTool.log")
# RemoveFile(InputFile="Results/Test_ReclamationHDB_Dev_Hour_AAADELETE_Real_out.dv",IfNotFound=Ignore)
# # Query the session time zone to troubleshoot
# ReadTableFromDataStore(DataStore="hdbtest",Sql="SELECT SESSIONTIMEZONE FROM DUAL",TableID="SESSIONTIMEZONE")
# RunSql(DataStore="hdbtest",Sql="ALTER SESSION SET TIME_ZONE='MST'")
# ReadTableFromDataStore(DataStore="hdbtest",Sql="SELECT SESSIONTIMEZONE FROM DUAL",TableID="SESSIONTIMEZONE_AfterSet")
# #
# SetOutputPeriod(OutputStart="2010-03-10 00",OutputEnd="2010-03-15 12")
# SetInputPeriod(InputStart="2010-03-10 00",InputEnd="2010-03-15 12")
# #------------------------- start the first pass -------------------------------------
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Hour",Description="AAA_DELETE",Units="cfs",PatternValues="55,105,125,135,755")
# # First write the time series to the database...
# SetDebugLevel(LogFileLevel=1)
# WriteReclamationHDB(DataStore="hdbtest",SiteDataTypeID=100376,ValidationFlag="A",TimeZone="MST",WriteProcedure="OLD_WRITE_TO_HDB")
# SetDebugLevel(ScreenLevel=0,LogFileLevel=0)
# # Now read the same time series from the database using the period that was written...
# SetDebugLevel(LogFileLevel=1)
# ReadReclamationHDB(DataStore="hdbtest",Interval="Hour",SiteDataTypeID=100376,Alias="FirstRead")
# SetDebugLevel(ScreenLevel=0,LogFileLevel=0)
# # Compare the time series read as a time series with a time series created from SQL query output:
# # - allow 1 difference when reading because daylight saving change results in 1 missing value
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from R_HOUR where site_datatype_id = 100376 and end_date_time >= to_date('${InputStart}','YYYY-MM-DD HH24') and end_date_time <= to_date('${InputEnd}','YYYY-MM-DD HH24') order by start_date_time",TableID="r_hour1")
# TableToTimeSeries(TableID="r_hour1",DateTimeColumn="end_date_time",LocationID="100376",ValueColumn="value",Interval=Hour,Units="cfs",Alias="FirstReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="FirstRead",AllowedDiff="1",IfDifferent=Warn)
# CompareTimeSeries(TSID1="FirstRead",TSID2="FirstReadFromTable",IfDifferent=Warn)
# # Also check for missing because there should be none over time zone change:
# # - TODO smalers 2021-11-22 don't check for missing because daylight saving introduces 1 missing value
# #   and the time series comparison above will catch missing
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstRead",CheckCriteria="Missing")
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstReadFromTable",CheckCriteria="Missing")
# #------------------------- end the first pass -------------------------------------
# #
# #------------------------- start the second pass -------------------------------------
# # Start second pass (previous values x 10)...
# NewPatternTimeSeries(Alias="AAA_DELETE2",NewTSID="AAA_DELETE.HDB.flow.Hour",Description="AAA_DELETE",Units="cfs",PatternValues="550,1050,1250,1350,7550")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",TSList=LastMatchingTSID,TSID="AAA_DELETE2",SiteDataTypeID=100376,ValidationFlag="A",TimeZone="MST",WriteProcedure="OLD_WRITE_TO_HDB")
# # Now read the same time series from the database using the period that was written...
# ReadReclamationHDB(DataStore="hdbtest",Interval="Hour",SiteDataTypeID=100376,Alias="SecondRead")
# # Compare the time series read as a time series with a time series created from SQL query output.
# # - allow 1 difference when reading because daylight saving change results in 1 missing value
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from R_HOUR where site_datatype_id = 100376 and end_date_time >= to_date('${InputStart}','YYYY-MM-DD HH24') and end_date_time <= to_date('${InputEnd}','YYYY-MM-DD HH24') order by start_date_time",TableID="r_hour2")
# TableToTimeSeries(TableID="r_hour2",DateTimeColumn="end_date_time",LocationID="100376",ValueColumn="value",Interval=Hour,Units="cfs",Alias="SecondReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE2",TSID2="SecondRead",AllowedDiff="1",IfDifferent=Warn)
# CompareTimeSeries(TSID1="SecondRead",TSID2="SecondReadFromTable",IfDifferent=Warn)
# # Also check for missing because there should be none over time zone change
# # - TODO smalers 2021-11-22 don't check for missing because daylight saving introduces 1 missing value
# #   and the time series comparison above will catch missing
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondRead",CheckCriteria="Missing")
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondReadFromTable",CheckCriteria="Missing")
# #------------------------- end the second pass -------------------------------------
# #
# # Uncomment the following command to regenerate the expected results file.
# WriteDateValue(TSList=LastMatchingTSID,TSID="FirstRead",OutputFile="ExpectedResults/Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Real_out.dv")
# # Generate new output for what was read from the database...
# WriteDateValue(TSList=LastMatchingTSID,TSID="FirstRead",OutputFile="Results/Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Real_out.dv")
# # Do regression comparison...
# CompareFiles(InputFile1="ExpectedResults\Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Real_out.dv",InputFile2="Results/Test_WriteReclamationHDB_Dev_Hour_AAADELETE_Real_out.dv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on localhost\CDSS
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20210322 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20210322
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 1
TSID        = "diversion:100376.HDB.flow.Hour.AAA_DELETE"
Alias       = "FirstRead"
Description = "100376"
DataType    = "flow"
Units       = "cfs"
MissingVal  = NaN
Start       = 2010-03-10 00
End         = 2010-03-15 12
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=diversion:100376.HDB.flow.Hour.AAA_DELETE Alias=FirstRead):
#
#   Created new time series with interval determined from TSID "diversion:100376.HDB.flow.Hour.AAA_DELETE"
#
#EndHeader
Date Time "FirstRead, cfs"
2010-03-10 00 55.0000
2010-03-10 01 105.0000
2010-03-10 02 125.0000
2010-03-10 03 135.0000
2010-03-10 04 755.0000
2010-03-10 05 55.0000
2010-03-10 06 105.0000
2010-03-10 07 125.0000
2010-03-10 08 135.0000
2010-03-10 09 755.0000
2010-03-10 10 55.0000
2010-03-10 11 105.0000
2010-03-10 12 125.0000
2010-03-10 13 135.0000
2010-03-10 14 755.0000
2010-03-10 15 55.0000
2010-03-10 16 105.0000
2010-03-10 17 125.0000
2010-03-10 18 135.0000
2010-03-10 19 755.0000
2010-03-10 20 55.0000
2010-03-10 21 105.0000
2010-03-10 22 125.0000
2010-03-10 23 135.0000
2010-03-11 00 755.0000
2010-03-11 01 55.0000
2010-03-11 02 105.0000
2010-03-11 03 125.0000
2010-03-11 04 135.0000
2010-03-11 05 755.0000
2010-03-11 06 55.0000
2010-03-11 07 105.0000
2010-03-11 08 125.0000
2010-03-11 09 135.0000
2010-03-11 10 755.0000
2010-03-11 11 55.0000
2010-03-11 12 105.0000
2010-03-11 13 125.0000
2010-03-11 14 135.0000
2010-03-11 15 755.0000
2010-03-11 16 55.0000
2010-03-11 17 105.0000
2010-03-11 18 125.0000
2010-03-11 19 135.0000
2010-03-11 20 755.0000
2010-03-11 21 55.0000
2010-03-11 22 105.0000
2010-03-11 23 125.0000
2010-03-12 00 135.0000
2010-03-12 01 755.0000
2010-03-12 02 55.0000
2010-03-12 03 105.0000
2010-03-12 04 125.0000
2010-03-12 05 135.0000
2010-03-12 06 755.0000
2010-03-12 07 55.0000
2010-03-12 08 105.0000
2010-03-12 09 125.0000
2010-03-12 10 135.0000
2010-03-12 11 755.0000
2010-03-12 12 55.0000
2010-03-12 13 105.0000
2010-03-12 14 125.0000
2010-03-12 15 135.0000
2010-03-12 16 755.0000
2010-03-12 17 55.0000
2010-03-12 18 105.0000
2010-03-12 19 125.0000
2010-03-12 20 135.0000
2010-03-12 21 755.0000
2010-03-12 22 55.0000
2010-03-12 23 105.0000
2010-03-13 00 125.0000
2010-03-13 01 135.0000
2010-03-13 02 755.0000
2010-03-13 03 55.0000
2010-03-13 04 105.0000
2010-03-13 05 125.0000
2010-03-13 06 135.0000
2010-03-13 07 755.0000
2010-03-13 08 55.0000
2010-03-13 09 105.0000
2010-03-13 10 125.0000
2010-03-13 11 135.0000
2010-03-13 12 755.0000
2010-03-13 13 55.0000
2010-03-13 14 105.0000
2010-03-13 15 125.0000
2010-03-13 16 135.0000
2010-03-13 17 755.0000
2010-03-13 18 55.0000
2010-03-13 19 105.0000
2010-03-13 20 125.0000
2010-03-13 21 135.0000
2010-03-13 22 755.0000
2010-03-13 23 55.0000
2010-03-14 00 105.0000
2010-03-14 01 125.0000
2010-03-14 02 NaN
2010-03-14 03 755.0000
2010-03-14 04 55.0000
2010-03-14 05 105.0000
2010-03-14 06 125.0000
2010-03-14 07 135.0000
2010-03-14 08 755.0000
2010-03-14 09 55.0000
2010-03-14 10 105.0000
2010-03-14 11 125.0000
2010-03-14 12 135.0000
2010-03-14 13 755.0000
2010-03-14 14 55.0000
2010-03-14 15 105.0000
2010-03-14 16 125.0000
2010-03-14 17 135.0000
2010-03-14 18 755.0000
2010-03-14 19 55.0000
2010-03-14 20 105.0000
2010-03-14 21 125.0000
2010-03-14 22 135.0000
2010-03-14 23 755.0000
2010-03-15 00 55.0000
2010-03-15 01 105.0000
2010-03-15 02 125.0000
2010-03-15 03 135.0000
2010-03-15 04 755.0000
2010-03-15 05 55.0000
2010-03-15 06 105.0000
2010-03-15 07 125.0000
2010-03-15 08 135.0000
2010-03-15 09 755.0000
2010-03-15 10 55.0000
2010-03-15 11 105.0000
2010-03-15 12 125.0000
