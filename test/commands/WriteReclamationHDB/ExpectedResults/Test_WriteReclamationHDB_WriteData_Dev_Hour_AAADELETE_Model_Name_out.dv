# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 15.1.0 (2025-04-12)
# user:         sam
# date:         Tue Apr 15 11:25:49 America/Denver 2025
# host:         crystal
# directory:    C:\Users\sam\cdss-dev\TSTool\git-repos\owf-tstool-reclamationhdb-plugin\test\test-suite\run
# command line: TSTool
#  --home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\TSTool\git-repos\owf-tstool-reclamationhdb-plugin\test\commands\WriteReclamationHDB\Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Model_Name.TSTool"
# Commands: 
# # Test writing a 1hour time series to ReclamationHDB database:
# #   - development database
# #   - new WRITE_MODEL_DATA procedure
# #   - model HOUR table
# #   - use model name (not MRI) - corresponds to MRI 167
# #   - SDI 100376 (site common name AAA_DELETE)
# #   - 1hour data - note that HDB uses end_date_time for end of interval but write routines key off of start_date_time
# #   - Write twice with different numbers to make sure old results are not just sitting
# #     in the database.  Write non-missing values because HDB convention is to
# #     NOT write missing values (not sure how re-write is handled if missing involved).
# #   - For two writes, use TSID read once, and ReadReclamationHDB() once to exercise read.
# #   - TO EXAMINE tests, look at first 3 time series
# #@testSuite ReclamationHDB
# StartLog(LogFile="Results/Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Model_Name.TSTool.log")
# RemoveFile(InputFile="Results/Test_ReclamationHDB_WriteData_Dev_Hour_AAADELETE_Model_Name_out.dv",IfNotFound="Ignore")
# SetOutputPeriod(OutputStart="2010-03-10 00",OutputEnd="2010-03-15 12")
# SetInputPeriod(InputStart="2010-03-10 00",InputEnd="2010-03-15 12")
# #------------------------- start the first pass -------------------------------------
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Hour",Description="AAA_DELETE",Units="cfs",PatternValues="600,1100,1300,1400,7600")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ModelName="CBT AOP RiverWare",ModelRunName="CBT AOP Test",ModelRunDate="2012-07-01 00:00",Agency="USBR",ValidationFlag="A",TimeZone="MST",WriteProcedure="WRITE_DATA")
# # Now read the same time series from the database using the period that was written...
# ReadTimeSeries(TSID="diversion:100376-167.HDB.flow.Hour.AAA_DELETE~hdbtest",Alias="FirstRead",IfNotFound="Warn")
# # Compare the time series read as a time series with a time series created from SQL query output:
# # - allow 1 difference due to daylight saving gap
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from M_HOUR where site_datatype_id = 100376 and model_run_id = 167 and end_date_time >= to_date('${InputStart}','YYYY-MM-DD HH24') and end_date_time <= to_date('${InputEnd}','YYYY-MM-DD HH24') order by start_date_time",TableID="m_hour1")
# TableToTimeSeries(TableID="m_hour1",DateTimeColumn="end_date_time",LocationID="100376",Interval="Hour",Alias="FirstReadFromTable",ValueColumn="value",Units="cfs")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="FirstRead",AllowedDiff="1",IfDifferent="Warn")
# CompareTimeSeries(TSID1="FirstRead",TSID2="FirstReadFromTable",IfDifferent="Warn")
# # Also check for missing because there should be none over time zone change:
# # - comment out to ignore daylight saving gap
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstRead",CheckCriteria="Missing")
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstReadFromTable",CheckCriteria="Missing")
# #------------------------- end the first pass -------------------------------------
# #
# #------------------------- start the second pass -------------------------------------
# # Start second pass (previous values x 10)...
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Hour",Description="AAA_DELETE",Units="cfs",PatternValues="60000,20000,22000,23000,85000")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",TSList=LastMatchingTSID,TSID="AAA_DELETE",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ModelName="CBT AOP RiverWare",ModelRunName="CBT AOP Test",ModelRunDate="2012-07-01 00:00",Agency="USBR",ValidationFlag="A",TimeZone="MST",WriteProcedure="WRITE_DATA")
# # Now read the same time series from the database using the period that was written...
# ReadReclamationHDB(DataStore="hdbtest",Interval="Hour",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ModelName="CBT AOP RiverWare",ModelRunName="CBT AOP Test",ModelRunDate="2012-07-01 00:00",Alias="SecondRead")
# # Compare the time series read as a time series with a time series created from SQL query output:
# # - allow 1 difference due to daylight saving gap
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from M_HOUR where site_datatype_id = 100376 and model_run_id = 167 and end_date_time >= to_date('${InputStart}','YYYY-MM-DD HH24') and end_date_time <= to_date('${InputEnd}','YYYY-MM-DD HH24') order by start_date_time",TableID="m_hour2")
# TableToTimeSeries(TableID="m_hour2",DateTimeColumn="end_date_time",LocationID="100376",Interval="Hour",Alias="SecondReadFromTable",ValueColumn="value",Units="cfs")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="SecondRead",AllowedDiff="1",IfDifferent="Warn")
# CompareTimeSeries(TSID1="SecondRead",TSID2="SecondReadFromTable",IfDifferent="Warn")
# # Also check for missing because there should be none over time zone change:
# # - comment out to ignore daylight saving gap
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondRead",CheckCriteria="Missing")
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondReadFromTable",CheckCriteria="Missing")
# #------------------------- end the second pass -------------------------------------
# # Uncomment the following command to regenerate the expected results file.
# WriteDateValue(TSList="LastMatchingTSID",TSID="FirstRead",OutputFile="ExpectedResults/Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Model_Name_out.dv")
# # Generate new output for what was read from the database...
# WriteDateValue(TSList="LastMatchingTSID",TSID="FirstRead",OutputFile="Results/Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Model_Name_out.dv")
# # Do regression comparison...
# CompareFiles(InputFile1="ExpectedResults\Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Model_Name_out.dv",InputFile2="Results/Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Model_Name_out.dv",IfDifferent="Warn")
#
Delimiter   = " "
NumTS       = 1
TSID        = "diversion:100376-167.HDB.flow.Hour.AAA_DELETE"
Alias       = "FirstRead"
Description = "100376-167"
DataType    = "flow"
Units       = "cfs"
MissingVal  = NaN
Start       = 2010-03-10 00
End         = 2010-03-15 12
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=diversion:100376-167.HDB.flow.Hour.AAA_DELETE Alias=FirstRead):
#
#   Created new time series with interval determined from TSID "diversion:100376-167.HDB.flow.Hour.AAA_DELETE".
#
#EndHeader
Date Time "FirstRead, cfs"
2010-03-10 00 600.0000
2010-03-10 01 200.0000
2010-03-10 02 220.0000
2010-03-10 03 230.0000
2010-03-10 04 850.0000
2010-03-10 05 600.0000
2010-03-10 06 200.0000
2010-03-10 07 220.0000
2010-03-10 08 230.0000
2010-03-10 09 850.0000
2010-03-10 10 600.0000
2010-03-10 11 200.0000
2010-03-10 12 220.0000
2010-03-10 13 230.0000
2010-03-10 14 850.0000
2010-03-10 15 600.0000
2010-03-10 16 200.0000
2010-03-10 17 220.0000
2010-03-10 18 230.0000
2010-03-10 19 850.0000
2010-03-10 20 600.0000
2010-03-10 21 200.0000
2010-03-10 22 220.0000
2010-03-10 23 230.0000
2010-03-11 00 850.0000
2010-03-11 01 600.0000
2010-03-11 02 200.0000
2010-03-11 03 220.0000
2010-03-11 04 230.0000
2010-03-11 05 850.0000
2010-03-11 06 600.0000
2010-03-11 07 200.0000
2010-03-11 08 220.0000
2010-03-11 09 230.0000
2010-03-11 10 850.0000
2010-03-11 11 600.0000
2010-03-11 12 200.0000
2010-03-11 13 220.0000
2010-03-11 14 230.0000
2010-03-11 15 850.0000
2010-03-11 16 600.0000
2010-03-11 17 200.0000
2010-03-11 18 220.0000
2010-03-11 19 230.0000
2010-03-11 20 850.0000
2010-03-11 21 600.0000
2010-03-11 22 200.0000
2010-03-11 23 220.0000
2010-03-12 00 230.0000
2010-03-12 01 850.0000
2010-03-12 02 600.0000
2010-03-12 03 200.0000
2010-03-12 04 220.0000
2010-03-12 05 230.0000
2010-03-12 06 850.0000
2010-03-12 07 600.0000
2010-03-12 08 200.0000
2010-03-12 09 220.0000
2010-03-12 10 230.0000
2010-03-12 11 850.0000
2010-03-12 12 600.0000
2010-03-12 13 200.0000
2010-03-12 14 220.0000
2010-03-12 15 230.0000
2010-03-12 16 850.0000
2010-03-12 17 600.0000
2010-03-12 18 200.0000
2010-03-12 19 220.0000
2010-03-12 20 230.0000
2010-03-12 21 850.0000
2010-03-12 22 600.0000
2010-03-12 23 200.0000
2010-03-13 00 220.0000
2010-03-13 01 230.0000
2010-03-13 02 850.0000
2010-03-13 03 600.0000
2010-03-13 04 200.0000
2010-03-13 05 220.0000
2010-03-13 06 230.0000
2010-03-13 07 850.0000
2010-03-13 08 600.0000
2010-03-13 09 200.0000
2010-03-13 10 220.0000
2010-03-13 11 230.0000
2010-03-13 12 850.0000
2010-03-13 13 600.0000
2010-03-13 14 200.0000
2010-03-13 15 220.0000
2010-03-13 16 230.0000
2010-03-13 17 850.0000
2010-03-13 18 600.0000
2010-03-13 19 200.0000
2010-03-13 20 220.0000
2010-03-13 21 230.0000
2010-03-13 22 850.0000
2010-03-13 23 600.0000
2010-03-14 00 200.0000
2010-03-14 01 220.0000
2010-03-14 02 NaN
2010-03-14 03 850.0000
2010-03-14 04 600.0000
2010-03-14 05 200.0000
2010-03-14 06 220.0000
2010-03-14 07 230.0000
2010-03-14 08 850.0000
2010-03-14 09 600.0000
2010-03-14 10 200.0000
2010-03-14 11 220.0000
2010-03-14 12 230.0000
2010-03-14 13 850.0000
2010-03-14 14 600.0000
2010-03-14 15 200.0000
2010-03-14 16 220.0000
2010-03-14 17 230.0000
2010-03-14 18 850.0000
2010-03-14 19 600.0000
2010-03-14 20 200.0000
2010-03-14 21 220.0000
2010-03-14 22 230.0000
2010-03-14 23 850.0000
2010-03-15 00 600.0000
2010-03-15 01 200.0000
2010-03-15 02 220.0000
2010-03-15 03 230.0000
2010-03-15 04 850.0000
2010-03-15 05 600.0000
2010-03-15 06 200.0000
2010-03-15 07 220.0000
2010-03-15 08 230.0000
2010-03-15 09 850.0000
2010-03-15 10 600.0000
2010-03-15 11 200.0000
2010-03-15 12 220.0000
