# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 11.10.00 (2016-04-12)
# user:         sam
# date:         Thu Apr 28 23:40:20 America/Denver 2016
# host:         colorado
# directory:    C:\owf-gitrepos\cdss-app-tstool-test\test\regression\commands\general\WriteReclamationHDB
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\owf-gitrepos\cdss-app-tstool-test\test\regression\commands\general\WriteReclamationHDB\Test_WriteReclamationHDB_Dev_Day_AAADELETE_Real.TSTool"
# Commands: 
# # Test writing a day time series to ReclamationHDB database:
# #   - development database
# #   - real table
# #   - SDI 100376 (site common name AAA_DELETE)
# #   - day data - note that HDB uses start_date_time for day (end is hour zero of next day)
# #   - Write twice with different numbers to make sure old results are not just sitting
# #     in the database.  Write non-missing values because HDB convention is to
# #     NOT write missing values (not sure how re-write is handled if missing involved).
# #   - For two writes, use TSID read once, and ReadReclamationHDB() once to exercise read.
# #   - Set the period to cross the time change, which occurs at 2010-04-14 02
# #   - TO EXAMINE tests, look at first 3 time series around the leap year change, similar for last 3 time series
# StartLog(LogFile="Results/Test_WriteReclamationHDB_Dev_Day_AAADELETE_Real.TSTool.log")
# RemoveFile(InputFile="Results/Test_ReclamationHDB_Dev_Day_AAADELETE_Real_out.dv",IfNotFound=Ignore)
# #
# #------------------------- start the first pass -------------------------------------
# SetInputPeriod(InputStart="2010-03-01",InputEnd="2010-04-15")
# SetOutputPeriod(OutputStart="2010-03-01",OutputEnd="2010-04-15")
# SetProperty(PropertyName="InputEnd2",PropertyType=DateTime,PropertyValue="2010-04-16")
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Day",Description="AAA_DELETE",Units="cfs",PatternValues="5,10,12,13,75")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ValidationFlag="A",TimeZone="MST")
# # Now read the same time series from the database using the period that was written...
# ReadTimeSeries(TSID="diversion:100376.HDB.flow.Day.AAA_DELETE~hdbtest",Alias="FirstRead",IfNotFound=Warn)
# # Compare the time series read as a time series with a time series created from SQL query output.
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from R_DAY where site_datatype_id = 100376 and end_date_time >= to_date('${InputStart}','YYYY-MM-DD') and end_date_time <= to_date('${InputEnd2}','YYYY-MM-DD') order by start_date_time",TableID="r_day1")
# TableToTimeSeries(TableID="r_day1",DateTimeColumn="start_date_time",LocationID="100376",ValueColumn="value",Interval=Day,Units="cfs",Alias="FirstReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="FirstRead",WarnIfDifferent=True)
# CompareTimeSeries(TSID1="FirstRead",TSID2="FirstReadFromTable",WarnIfDifferent=True)
# # Also check for missing because there should be none over time zone change
# CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstRead",CheckCriteria="Missing")
# CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstReadFromTable",CheckCriteria="Missing")
# #
# #------------------------- start the second pass -------------------------------------
# # Start second pass (previous values x 10)...
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Day",Description="AAA_DELETE",Units="cfs",PatternValues="500,100,120,130,750")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",TSList=LastMatchingTSID,TSID="AAA_DELETE",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,ValidationFlag="A",TimeZone="MST")
# # Now read the same time series from the database using the period that was written...
# ReadReclamationHDB(DataStore="hdbtest",Interval="Day",SiteCommonName="AAA_DELETE",DataTypeCommonName="flow",SiteDataTypeID=100376,Alias="SecondRead")
# # Compare the time series read as a time series with a time series created from SQL query output.
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from R_DAY where site_datatype_id = 100376 and start_date_time >= to_date('${InputStart}','YYYY-MM-DD') and start_date_time <= to_date('${InputEnd2}','YYYY-MM-DD') order by start_date_time",TableID="r_day2")
# TableToTimeSeries(TableID="r_day2",DateTimeColumn="start_date_time",LocationID="100376",ValueColumn="value",Interval=Day,Units="cfs",Alias="SecondReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="SecondRead",WarnIfDifferent=True)
# CompareTimeSeries(TSID1="SecondRead",TSID2="SecondReadFromTable",WarnIfDifferent=True)
# # Also check for missing because there should be none over time zone change
# CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondRead",CheckCriteria="Missing")
# CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondReadFromTable",CheckCriteria="Missing")
# #------------------------- end the second pass -------------------------------------
# #
# # Uncomment the following command to regenerate the expected results file.
# WriteDateValue(TSList=LastMatchingTSID,TSID="SecondRead",OutputFile="ExpectedResults/Test_WriteReclamationHDB_Dev_Day_AAADELETE_Real_out.dv")
# # Generate new output for what was read from the database...
# WriteDateValue(TSList=LastMatchingTSID,TSID="SecondRead",OutputFile="Results/Test_WriteReclamationHDB_Dev_Day_AAADELETE_Real_out.dv")
# # Do regression comparison...
# CompareFiles(InputFile1="ExpectedResults\Test_WriteReclamationHDB_Dev_Day_AAADELETE_Real_out.dv",InputFile2="Results/Test_WriteReclamationHDB_Dev_Day_AAADELETE_Real_out.dv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20160407 on localhost\CDSS
# HydroBase.db_version:  design version: 20141201  last data change: 20160407
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20160407 on localhost\CDSS
# HydroBase.db_version:  design version: 20141201  last data change: 20160407
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 1
TSID        = "diversion:100376.HDB.flow.Day.AAA_DELETE"
Alias       = "SecondRead"
Description = "100376"
DataType    = "flow"
Units       = "cfs"
MissingVal  = NaN
Start       = 2010-03-01
End         = 2010-04-15
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=diversion:100376.HDB.flow.Day.AAA_DELETE Alias=SecondRead):
#
#   Created new time series with interval determined from TSID "diversion:100376.HDB.flow.Day.AAA_DELETE"
#
#EndHeader
Date "SecondRead, cfs"
2010-03-01 500.0000
2010-03-02 100.0000
2010-03-03 120.0000
2010-03-04 130.0000
2010-03-05 750.0000
2010-03-06 500.0000
2010-03-07 100.0000
2010-03-08 120.0000
2010-03-09 130.0000
2010-03-10 750.0000
2010-03-11 500.0000
2010-03-12 100.0000
2010-03-13 120.0000
2010-03-14 130.0000
2010-03-15 750.0000
2010-03-16 500.0000
2010-03-17 100.0000
2010-03-18 120.0000
2010-03-19 130.0000
2010-03-20 750.0000
2010-03-21 500.0000
2010-03-22 100.0000
2010-03-23 120.0000
2010-03-24 130.0000
2010-03-25 750.0000
2010-03-26 500.0000
2010-03-27 100.0000
2010-03-28 120.0000
2010-03-29 130.0000
2010-03-30 750.0000
2010-03-31 500.0000
2010-04-01 100.0000
2010-04-02 120.0000
2010-04-03 130.0000
2010-04-04 750.0000
2010-04-05 500.0000
2010-04-06 100.0000
2010-04-07 120.0000
2010-04-08 130.0000
2010-04-09 750.0000
2010-04-10 500.0000
2010-04-11 100.0000
2010-04-12 120.0000
2010-04-13 130.0000
2010-04-14 750.0000
2010-04-15 500.0000
