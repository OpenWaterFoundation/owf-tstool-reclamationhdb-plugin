# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 14.0.2 (2021-11-15)
# user:         sam
# date:         Wed Nov 24 16:51:33 America/Denver 2021
# host:         RoaringFork
# directory:    C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\WriteReclamationHDB
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\cdss-dev\TSTool\git-repos\cdss-app-tstool-test\test\commands\WriteReclamationHDB\Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Real.TSTool"
# Commands: 
# # TODO SAM 2016-05-01 This test fails apparently due to bug in Oracle JDBC driver related to time zone change
# # Test writing a 1hour REAL time series to ReclamationHDB database:
# #   - This is a copy of the 1Hour test but using more general Hour interval
# #   - development database
# #   - new WRITE_REAL_DATA procedure
# #   - real HOUR table
# #   - SDI 100376 (AAA_DELETE site common name)
# #   - hour data - note that HDB uses end_date_time for end of interval but write routines key off of start_date_time
# #   - Write twice with different numbers to make sure old results are not just sitting
# #     in the database.  Write non-missing values because HDB convention is to
# #     NOT write missing values (not sure how re-write is handled if missing involved).
# #   - For two writes, use TSID read once, and ReadReclamationHDB() once to exercise read.
# #   - Set the period to cross the time change, which occurs at 2010-03-14 02
# #   - TO EXAMINE tests, look at first 3 time series
# #@testSuite ReclamationHDB
# StartLog(LogFile="Results/Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Real.TSTool.log")
# RemoveFile(InputFile="Results/Test_ReclamationHDB_WriteData_Dev_Hour_AAADELETE_Real_out.dv",IfNotFound=Ignore)
# # Query the session time zone to troubleshoot
# ReadTableFromDataStore(DataStore="hdbtest",Sql="SELECT SESSIONTIMEZONE FROM DUAL",TableID="SESSIONTIMEZONE")
# RunSql(DataStore="hdbtest",Sql="ALTER SESSION SET TIME_ZONE='MST'")
# ReadTableFromDataStore(DataStore="hdbtest",Sql="SELECT SESSIONTIMEZONE FROM DUAL",TableID="SESSIONTIMEZONE_AfterSet")
# #
# SetOutputPeriod(OutputStart="2010-03-10 00",OutputEnd="2010-03-15 12")
# SetInputPeriod(InputStart="2010-03-10 00",InputEnd="2010-03-15 12")
# #------------------------- start the first pass -------------------------------------
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Hour",Description="AAA_DELETE",Units="cfs",PatternValues="5500,10500,12500,13500,75500")
# # First write the time series to the database...
# SetDebugLevel(LogFileLevel=1)
# WriteReclamationHDB(DataStore="hdbtest",SiteDataTypeID=100376,Agency="USBR",ValidationFlag="A",TimeZone="MST",WriteProcedure="WRITE_DATA")
# SetDebugLevel(ScreenLevel=0,LogFileLevel=0)
# # Now read the same time series from the database using the period that was written...
# SetDebugLevel(LogFileLevel=1)
# ReadReclamationHDB(DataStore="hdbtest",Interval="Hour",SiteDataTypeID=100376,Alias="FirstRead")
# SetDebugLevel(ScreenLevel=0,LogFileLevel=0)
# # Compare the time series read as a time series with a time series created from SQL query output:
# # - allow 1 difference due to daylight saving gap
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from R_HOUR where site_datatype_id = 100376 and end_date_time >= to_date('${InputStart}','YYYY-MM-DD HH24') and end_date_time <= to_date('${InputEnd}','YYYY-MM-DD HH24') order by start_date_time",TableID="r_hour1")
# TableToTimeSeries(TableID="r_hour1",DateTimeColumn="end_date_time",LocationID="100376",ValueColumn="value",Interval=Hour,Units="cfs",Alias="FirstReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="FirstRead",AllowedDiff="1",IfDifferent=Warn)
# CompareTimeSeries(TSID1="FirstRead",TSID2="FirstReadFromTable",IfDifferent=Warn)
# # Also check for missing because there should be none over time zone change:
# # - comment out because daylight saving causes a gap
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstRead",CheckCriteria="Missing")
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="FirstReadFromTable",CheckCriteria="Missing")
# #------------------------- end the first pass -------------------------------------
# #
# #------------------------- start the second pass -------------------------------------
# # Start second pass (previous values x 10)...
# NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Hour",Description="AAA_DELETE",Units="cfs",PatternValues="55000,105000,125000,135000,755000")
# # First write the time series to the database...
# WriteReclamationHDB(DataStore="hdbtest",TSList=LastMatchingTSID,TSID="AAA_DELETE",SiteDataTypeID=100376,Agency="USBR",ValidationFlag="A",TimeZone="MST",WriteProcedure="WRITE_DATA")
# # Now read the same time series from the database using the period that was written...
# ReadReclamationHDB(DataStore="hdbtest",Interval="Hour",SiteDataTypeID=100376,Alias="SecondRead")
# # Compare the time series read as a time series with a time series created from SQL query output:
# # - allow 1 difference due to daylight saving gap
# ReadTableFromDataStore(DataStore="hdbtest",Sql="select * from R_HOUR where site_datatype_id = 100376 and end_date_time >= to_date('${InputStart}','YYYY-MM-DD HH24') and end_date_time <= to_date('${InputEnd}','YYYY-MM-DD HH24') order by start_date_time",TableID="r_hour2")
# TableToTimeSeries(TableID="r_hour2",DateTimeColumn="end_date_time",LocationID="100376",ValueColumn="value",Interval=Hour,Units="cfs",Alias="SecondReadFromTable")
# CompareTimeSeries(TSID1="AAA_DELETE",TSID2="SecondRead",AllowedDiff="1",IfDifferent=Warn)
# CompareTimeSeries(TSID1="SecondRead",TSID2="SecondReadFromTable",IfDifferent=Warn)
# # Also check for missing because there should be none over time zone change:
# # - comment out because daylight saving causes a gap
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondRead",CheckCriteria="Missing")
# # CheckTimeSeries(TSList=AllMatchingTSID,TSID="SecondReadFromTable",CheckCriteria="Missing")
# #------------------------- end the second pass -------------------------------------
# #
# # Uncomment the following command to regenerate the expected results file.
# WriteDateValue(TSList=LastMatchingTSID,TSID="FirstRead",OutputFile="ExpectedResults/Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Real_out.dv")
# # Generate new output for what was read from the database...
# WriteDateValue(TSList=LastMatchingTSID,TSID="FirstRead",OutputFile="Results/Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Real_out.dv")
# # Do regression comparison...
# CompareFiles(InputFile1="ExpectedResults\Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Real_out.dv",InputFile2="Results/Test_WriteReclamationHDB_WriteData_Dev_Hour_AAADELETE_Real_out.dv",IfDifferent=Warn)
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on localhost\CDSS
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20210322 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20210322
# HydroBase table structure for software is at least 2020072020200720
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 1
TSID        = "diversion:100376.HDB.flow.Hour.AAA_DELETE"
Alias       = "FirstRead"
Description = "100376"
DataType    = "flow"
Units       = "cfs"
MissingVal  = NaN
Start       = 2010-03-10 00
End         = 2010-03-15 12
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=diversion:100376.HDB.flow.Hour.AAA_DELETE Alias=FirstRead):
#
#   Created new time series with interval determined from TSID "diversion:100376.HDB.flow.Hour.AAA_DELETE"
#
#EndHeader
Date Time "FirstRead, cfs"
2010-03-10 00 5500.0000
2010-03-10 01 10500.0000
2010-03-10 02 12500.0000
2010-03-10 03 13500.0000
2010-03-10 04 75500.0000
2010-03-10 05 5500.0000
2010-03-10 06 10500.0000
2010-03-10 07 12500.0000
2010-03-10 08 13500.0000
2010-03-10 09 75500.0000
2010-03-10 10 5500.0000
2010-03-10 11 10500.0000
2010-03-10 12 12500.0000
2010-03-10 13 13500.0000
2010-03-10 14 75500.0000
2010-03-10 15 5500.0000
2010-03-10 16 10500.0000
2010-03-10 17 12500.0000
2010-03-10 18 13500.0000
2010-03-10 19 75500.0000
2010-03-10 20 5500.0000
2010-03-10 21 10500.0000
2010-03-10 22 12500.0000
2010-03-10 23 13500.0000
2010-03-11 00 75500.0000
2010-03-11 01 5500.0000
2010-03-11 02 10500.0000
2010-03-11 03 12500.0000
2010-03-11 04 13500.0000
2010-03-11 05 75500.0000
2010-03-11 06 5500.0000
2010-03-11 07 10500.0000
2010-03-11 08 12500.0000
2010-03-11 09 13500.0000
2010-03-11 10 75500.0000
2010-03-11 11 5500.0000
2010-03-11 12 10500.0000
2010-03-11 13 12500.0000
2010-03-11 14 13500.0000
2010-03-11 15 75500.0000
2010-03-11 16 5500.0000
2010-03-11 17 10500.0000
2010-03-11 18 12500.0000
2010-03-11 19 13500.0000
2010-03-11 20 75500.0000
2010-03-11 21 5500.0000
2010-03-11 22 10500.0000
2010-03-11 23 12500.0000
2010-03-12 00 13500.0000
2010-03-12 01 75500.0000
2010-03-12 02 5500.0000
2010-03-12 03 10500.0000
2010-03-12 04 12500.0000
2010-03-12 05 13500.0000
2010-03-12 06 75500.0000
2010-03-12 07 5500.0000
2010-03-12 08 10500.0000
2010-03-12 09 12500.0000
2010-03-12 10 13500.0000
2010-03-12 11 75500.0000
2010-03-12 12 5500.0000
2010-03-12 13 10500.0000
2010-03-12 14 12500.0000
2010-03-12 15 13500.0000
2010-03-12 16 75500.0000
2010-03-12 17 5500.0000
2010-03-12 18 10500.0000
2010-03-12 19 12500.0000
2010-03-12 20 13500.0000
2010-03-12 21 75500.0000
2010-03-12 22 5500.0000
2010-03-12 23 10500.0000
2010-03-13 00 12500.0000
2010-03-13 01 13500.0000
2010-03-13 02 75500.0000
2010-03-13 03 5500.0000
2010-03-13 04 10500.0000
2010-03-13 05 12500.0000
2010-03-13 06 13500.0000
2010-03-13 07 75500.0000
2010-03-13 08 5500.0000
2010-03-13 09 10500.0000
2010-03-13 10 12500.0000
2010-03-13 11 13500.0000
2010-03-13 12 75500.0000
2010-03-13 13 5500.0000
2010-03-13 14 10500.0000
2010-03-13 15 12500.0000
2010-03-13 16 13500.0000
2010-03-13 17 75500.0000
2010-03-13 18 5500.0000
2010-03-13 19 10500.0000
2010-03-13 20 12500.0000
2010-03-13 21 13500.0000
2010-03-13 22 75500.0000
2010-03-13 23 5500.0000
2010-03-14 00 10500.0000
2010-03-14 01 12500.0000
2010-03-14 02 NaN
2010-03-14 03 7550.0000
2010-03-14 04 5500.0000
2010-03-14 05 10500.0000
2010-03-14 06 12500.0000
2010-03-14 07 13500.0000
2010-03-14 08 75500.0000
2010-03-14 09 5500.0000
2010-03-14 10 10500.0000
2010-03-14 11 12500.0000
2010-03-14 12 13500.0000
2010-03-14 13 75500.0000
2010-03-14 14 5500.0000
2010-03-14 15 10500.0000
2010-03-14 16 12500.0000
2010-03-14 17 13500.0000
2010-03-14 18 75500.0000
2010-03-14 19 5500.0000
2010-03-14 20 10500.0000
2010-03-14 21 12500.0000
2010-03-14 22 13500.0000
2010-03-14 23 75500.0000
2010-03-15 00 5500.0000
2010-03-15 01 10500.0000
2010-03-15 02 12500.0000
2010-03-15 03 13500.0000
2010-03-15 04 75500.0000
2010-03-15 05 5500.0000
2010-03-15 06 10500.0000
2010-03-15 07 12500.0000
2010-03-15 08 13500.0000
2010-03-15 09 75500.0000
2010-03-15 10 5500.0000
2010-03-15 11 10500.0000
2010-03-15 12 12500.0000
