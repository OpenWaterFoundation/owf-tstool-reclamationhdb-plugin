#@enabled False
# Disable because it seems like Reclamation is not going to need IntervalOverride after all
# Delete this test after verifying that it is not needed
#
# Test writing an instantaneous time series to ReclamationHDB
#   * development database
#   * old WRITE_TO_HDB procedure
#   * real table
#   * site common name AAA_DELETE
#   * instantaneous data (treat as hour using IntervalOverride)
#   * Write twice with different numbers to make sure old results are not just sitting
#     in the database.  Write non-missing values because HDB convention is to
#     NOT write missing values (not sure how re-write is handled if missing involved).
#   * For two writes, use TSID read once, and ReadReclamationHDB() once to exercise read.
StartLog(LogFile="Results/Test_WriteReclamationHDB_Dev_Instant_HourOverride_AAADELETE_Real_Name.TSTool.log")
RemoveFile(InputFile="Results/Test_ReclamationHDB_Dev_Instant_HourOverride_AAADELETE_Real_Name_out.dv",IfNotFound=Ignore)
# Make the definition of this time series match what is used in HDB so that the comparison
# of results all matches
#
# First pass...
NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="AAA_DELETE.HDB.flow.Irregular",IrregularInterval=15Minute,Description="AAA_DELETE",SetStart="2010-01-01 00:00",SetEnd="2010-01-03 12:30",Units="cfs",PatternValues="5,10,12,13,75")
# First write the time series to the database...
WriteReclamationHDB(DataStore="hdbtest",SiteCommonName="AAA_DELETE",DataTypeCommonName="inst flow",WriteProcedure="OLD_WRITE_TO_HDB")
# Now read the same time series from the database using the period that was written...
SetInputPeriod(InputStart="2010-01-01 00:00",InputEnd="2011-03-03 12:30")
#
# Second pass (previous values as hundreds)...
NewPatternTimeSeries(Alias="AAA_DELETE",NewTSID="Real:AAA_DELETE.HDB.flow.Irregular",IrregularInterval=15Minute,Description="Real:AAA_DELETE",SetStart="2010-01-01 00:00",SetEnd="2010-01-03 12:30",Units="cfs",PatternValues="500,100,120,130,750")
# First write the time series to the database...
WriteReclamationHDB(DataStore="hdbtest",TSList=LastMatchingTSID,TSID="AAA_DELETE",SiteCommonName="AAA_DELETE",DataTypeCommonName="inst flow",ValidationFlag="A",WriteProcedure="OLD_WRITE_TO_HDB")
# Now read the same time series from the database using the period that was written...
ReadReclamationHDB(DataStore="hdbtest",Interval="Irregular",SiteCommonName="AAA_DELETE",DataTypeCommonName="inst flow",InputStart="2010-01-01 00:00",InputEnd="2010-01-03 12:30")
#
# Uncomment the following command to regenerate the expected results file.
# WriteDateValue(OutputFile="ExpectedResults/Test_WriteReclamationHDB_Dev_Instant_HourOverride_AAADELETE_Real_Name_out.dv",OutputStart="2010-01-01 00:00",OutputEnd="2010-01-03 12:30",TSList=LastMatchingTSID,TSID="AAA_DELETE.HDB.flow.Irregular")
# Generate new output for what was read from the database...
WriteDateValue(OutputFile="Results/Test_WriteReclamationHDB_Dev_Instant_HourOverride_AAADELETE_Real_Name_out.dv",OutputStart="2010-01-01 00:00",OutputEnd="2010-01-03 12:30",TSList=LastMatchingTSID,TSID="AAA_DELETE.HDB.flow.Irregular")
# Do regression comparison...
CompareFiles(InputFile1="ExpectedResults\Test_WriteReclamationHDB_Dev_Instant_HourOverride_AAADELETE_Real_Name_out.dv",InputFile2="Results/Test_WriteReclamationHDB_Dev_Instant_HourOverride_AAADELETE_Real_Name_out.dv",IfDifferent=Warn)
